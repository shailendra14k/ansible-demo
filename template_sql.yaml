apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-sql-cluster
  title: Create an SQL Server on Azure VMs
  description: A self-service template to provision a new SQL cluster using Ansible.
  tags:
    - recommended
    - ansible
    - collection
    - indigo
spec:
  owner: platform-team
  type: service

  # This section defines the web form for the developer.
  parameters:
    - title: Cluster Configuration
      required:
        - cluster_name
      properties:
        cluster_name:
          title: Cluster Name
          type: string
          description: A unique name for the ARO cluster (e.g., my-team-aro-cluster).
        worker_node_count:
          title: Number of Worker Nodes
          type: integer
          description: The number of worker nodes for the cluster.
          default: 3
        template:
          title: Template ID
          type: integer
          description: A unique name for the ARO cluster (e.g., my-team-aro-cluster).
          default: 7
        token:
          title: Token
          type: string
          description: Oauth2 token
          ui:field: AAPTokenField
          ui:backstage:
            review:
              show: false

  # This section defines the actions to run after the form is submitted.
  steps:
    - id: fetch-skeleton
      name: Fetch Skeleton
      action: fetch:template
      input:
        url: ./provision-vm-skeleton # Relative path to your skeleton directory
        values: # Pass all parameters needed by the .njk files
          vmName: test
          owner: shailendra
    - id: trigger-ansible-job
      name: Launch ARO Deployment Job in AAP
      # This action makes a REST API call to your AAP instance.
      action: rhaap:launch-job-template
      input:
        token: ${{ parameters.token }}
        values:
          template:
            id: ${{ parameters.template }}
    - id: log-message
      name: Log PR URL
      action: debug:log
      input:
        message: The skeleton was fetched from t ----- ${{ steps['fetch-skeleton'].input.url }}
    - id: register
      name: Registering Resource
      action: catalog:register
      input:
        repoContentsUrl: https://github.com/shailendra14k/ansible-demo/blob/main
        catalogInfoPath: /catalog-info.yaml

  # 3. OUTPUT: Link to the newly created resource page
  output:
    links:
      - title: View ARO Cluster in Catalog
        url: ${{ steps.register.output.entityRef | entityRefToUrl }}
